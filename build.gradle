plugins {
    id 'com.gradle.plugin-publish' version '1.2.1'
    id 'eclipse'
    id 'dk.mada.style' version '1.0.0'
    id 'dk.mada.reproducible' version '1.0.2'
}

ext {
    mavenDisplayName = 'Plugin for reproducible maven artifacts'
    mavenDescription = 'A plugin that configures archive tasks to be reproducible.'
}

group = 'dk.mada.reproducible'

repositories {
    repositories {
        maven { url = uri("https://plugins.gradle.org/m2/") }
    }
    mavenCentral()
}

configurations {
    addedDependencies
}

dependencies {
    compileOnly        'org.jspecify:jspecify:0.3.0'

    testImplementation platform('org.junit:junit-bom:5.10.3')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly    'org.junit.platform:junit-platform-launcher'

    testImplementation gradleTestKit()
    testImplementation 'org.assertj:assertj-core:3.26.3'
}

gradlePlugin {
    website = 'https://github.com/jskov/reproducible-gradle'
    vcsUrl = 'https://github.com/jskov/reproducible-gradle'
    plugins {
        reproduciblePlugin {
            id = 'dk.mada.reproducible'
            displayName = mavenDisplayName
            description = mavenDescription
            tags.set(['buildinfo', 'reproducible'])
            implementationClass = 'dk.mada.reproducible.ReproduciblePlugin'
        }
    }
}

publishing {
    repositories {
        maven {
            name = "dist"
            url "file://${project.rootProject.file("build/dist").getAbsolutePath()}"
        }
    }
}

project.afterEvaluate { p ->
    tasks.withType(GenerateMavenPom).all {
        getPom().url = 'https://github.com/jskov/reproducible-gradle'
        getPom().name = mavenDisplayName
        getPom().description = mavenDescription

        getPom().developers {
            developer {
                id = 'jskov'
                name = 'Jesper Skov'
                email = 'jskov@mada.dk'
            }
        }
        getPom().licenses {
            license {
                name = 'Licensed under the EUPL-1.2-or-later'
                url = 'https://joinup.ec.europa.eu/sites/default/files/custom-page/attachment/2020-03/EUPL-1.2%20EN.txt'
            }
        }
        getPom().scm {
            connection = 'scm:git:git://github.com/jskov/reproducible-gradle.git'
            developerConnection = 'scm:git:ssh://github.com:jskov/reproducible-gradle.git'
            url = 'https://github.com/jskov/reproducible-gradle/'
        }
    }
}
